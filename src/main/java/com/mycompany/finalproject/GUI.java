/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.mycompany.finalproject;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.TreeMap;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

/**
 *
 * @author connor
 */
public class GUI extends javax.swing.JFrame {

    //Key will be the solicitation number
    private TreeMap<String, Product> products;
    private File currentFile;
    
    public GUI() {
        initComponents();
        
        textArea_contents.setLineWrap(true);
        textArea_contents.setWrapStyleWord(true);
        
        menuItem_save.setEnabled(false);
        
        products = new TreeMap<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        panel_productInformation = new javax.swing.JPanel();
        button_searchLink = new javax.swing.JButton();
        textField_weblink = new javax.swing.JTextField();
        label_weblink = new javax.swing.JLabel();
        panel_info = new javax.swing.JPanel();
        label_name = new javax.swing.JLabel();
        label_price = new javax.swing.JLabel();
        label_releaseDate = new javax.swing.JLabel();
        label_number = new javax.swing.JLabel();
        textField_number = new javax.swing.JTextField();
        label_contents = new javax.swing.JLabel();
        textField_name = new javax.swing.JTextField();
        textField_price = new javax.swing.JTextField();
        textField_releaseDate = new javax.swing.JTextField();
        button_addToWishlist = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea_contents = new javax.swing.JTextArea();
        comboBox_priority = new javax.swing.JComboBox<>();
        label_publisher = new javax.swing.JLabel();
        textField_publisher = new javax.swing.JTextField();
        label_ok = new javax.swing.JLabel();
        label_searchNum = new javax.swing.JLabel();
        textField_searchNum = new javax.swing.JTextField();
        panel_wishlist = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        table_wishlist = new javax.swing.JTable();
        button_delete = new javax.swing.JButton();
        button_save = new javax.swing.JButton();
        button_view = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_file = new javax.swing.JMenu();
        menuItem_open = new javax.swing.JMenuItem();
        menuItem_save = new javax.swing.JMenuItem();
        menuItem_saveAs = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabbedPane.setBackground(new java.awt.Color(0, 0, 0));

        button_searchLink.setText("Search");
        button_searchLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_searchLinkActionPerformed(evt);
            }
        });

        label_weblink.setText("Weblink");

        panel_info.setBackground(new java.awt.Color(204, 204, 204));
        panel_info.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        label_name.setText("Product Name");

        label_price.setText("Price");

        label_releaseDate.setText("Release Date");

        label_number.setText("Solicitation Number");

        label_contents.setText("Book's Contents");

        button_addToWishlist.setText("Add Item to Wishlist");
        button_addToWishlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addToWishlistActionPerformed(evt);
            }
        });

        textArea_contents.setColumns(20);
        textArea_contents.setRows(5);
        jScrollPane1.setViewportView(textArea_contents);

        comboBox_priority.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT PRIORITY", "1: Buy Immediately", "2: Probably", "3: Pondering+", "4: Waiting", "5: Pondering-", "6: Probably Not" }));

        label_publisher.setText("Publisher");

        javax.swing.GroupLayout panel_infoLayout = new javax.swing.GroupLayout(panel_info);
        panel_info.setLayout(panel_infoLayout);
        panel_infoLayout.setHorizontalGroup(
            panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_infoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_infoLayout.createSequentialGroup()
                        .addComponent(label_name)
                        .addGap(18, 18, 18)
                        .addComponent(textField_name))
                    .addGroup(panel_infoLayout.createSequentialGroup()
                        .addComponent(label_contents, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(panel_infoLayout.createSequentialGroup()
                        .addComponent(label_number)
                        .addGap(18, 18, 18)
                        .addComponent(textField_number, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(label_releaseDate)
                        .addGap(18, 18, 18)
                        .addComponent(textField_releaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(label_publisher)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textField_publisher, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(label_price)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textField_price, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(108, 108, 108))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_infoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(comboBox_priority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_addToWishlist)
                .addContainerGap())
        );
        panel_infoLayout.setVerticalGroup(
            panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_infoLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_name)
                    .addComponent(textField_name))
                .addGap(26, 26, 26)
                .addGroup(panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_number)
                    .addComponent(textField_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_price)
                    .addComponent(textField_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_releaseDate)
                    .addComponent(textField_releaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_publisher)
                    .addComponent(textField_publisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_infoLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_infoLayout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(label_contents)))
                .addGap(47, 47, 47)
                .addGroup(panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_addToWishlist)
                    .addComponent(comboBox_priority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );

        label_ok.setText("OR");

        label_searchNum.setText("Solicitation Number");

        javax.swing.GroupLayout panel_productInformationLayout = new javax.swing.GroupLayout(panel_productInformation);
        panel_productInformation.setLayout(panel_productInformationLayout);
        panel_productInformationLayout.setHorizontalGroup(
            panel_productInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_productInformationLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(panel_info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 152, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_productInformationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_productInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_productInformationLayout.createSequentialGroup()
                        .addComponent(label_weblink)
                        .addGap(18, 18, 18)
                        .addComponent(textField_weblink, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(445, 445, 445))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_productInformationLayout.createSequentialGroup()
                        .addComponent(button_searchLink)
                        .addGap(649, 649, 649))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_productInformationLayout.createSequentialGroup()
                        .addComponent(label_searchNum)
                        .addGap(18, 18, 18)
                        .addComponent(textField_searchNum, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(540, 540, 540))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_productInformationLayout.createSequentialGroup()
                        .addComponent(label_ok)
                        .addGap(681, 681, 681))))
        );
        panel_productInformationLayout.setVerticalGroup(
            panel_productInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_productInformationLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panel_productInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField_weblink)
                    .addComponent(label_weblink))
                .addGap(17, 17, 17)
                .addComponent(label_ok)
                .addGap(18, 18, 18)
                .addGroup(panel_productInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField_searchNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_searchNum))
                .addGap(20, 20, 20)
                .addComponent(button_searchLink)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_info, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
        );

        tabbedPane.addTab("Product Information", panel_productInformation);

        table_wishlist.setAutoCreateRowSorter(true);
        table_wishlist.setBackground(new java.awt.Color(204, 204, 255));
        table_wishlist.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        table_wishlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Solictitation #", "Publisher", "Contents", "Release Date", "Price", "Priority"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrollPane.setViewportView(table_wishlist);

        button_delete.setText("Delete Item");
        button_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_deleteActionPerformed(evt);
            }
        });

        button_save.setText("Save");
        button_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_saveActionPerformed(evt);
            }
        });

        button_view.setText("View");
        button_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_viewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_wishlistLayout = new javax.swing.GroupLayout(panel_wishlist);
        panel_wishlist.setLayout(panel_wishlistLayout);
        panel_wishlistLayout.setHorizontalGroup(
            panel_wishlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1404, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_wishlistLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(button_view)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_delete))
        );
        panel_wishlistLayout.setVerticalGroup(
            panel_wishlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_wishlistLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_wishlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_delete)
                    .addComponent(button_save)
                    .addComponent(button_view))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabbedPane.addTab("Wishlist", panel_wishlist);

        menu_file.setText("File");

        menuItem_open.setText("Open");
        menuItem_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_openActionPerformed(evt);
            }
        });
        menu_file.add(menuItem_open);

        menuItem_save.setText("Save");
        menuItem_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_saveActionPerformed(evt);
            }
        });
        menu_file.add(menuItem_save);

        menuItem_saveAs.setText("Save As");
        menuItem_saveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_saveAsActionPerformed(evt);
            }
        });
        menu_file.add(menuItem_saveAs);

        jMenuBar1.add(menu_file);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItem_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_openActionPerformed
        // Creates a file choose for the user to select a saved file.
        // Then, creates a WishlistModel with the <periods>.
        // Then, <periods> are read from the file and run with the program.

        JFileChooser jfc = new JFileChooser();

        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {

            try {
                currentFile = jfc.getSelectedFile();

                FileInputStream fis = new FileInputStream(currentFile);
                ObjectInputStream ois = new ObjectInputStream(fis);

                WishlistModel model = (WishlistModel)ois.readObject();

                products = model.getProducts();

                buildTable();
                menuItem_save.setEnabled(true);

                ois.close();

            } catch (ClassNotFoundException | IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_menuItem_openActionPerformed

    private void menuItem_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_saveActionPerformed
        //Saves the model to disk

        if (currentFile == null){
            menuItem_saveAsActionPerformed(evt);
        }

        try {
            FileOutputStream fos = new FileOutputStream(currentFile);
            ObjectOutputStream oos = new ObjectOutputStream(fos);

            oos.writeObject(new WishlistModel(products));

            oos.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuItem_saveActionPerformed

    private void menuItem_saveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_saveAsActionPerformed
        // Creates a file choose for the user to select the save location and name.
        // Then, creates a WishlistModel with the <products>. The model is then saved to disk.

        JFileChooser jfc = new JFileChooser();

        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION){

            currentFile = jfc.getSelectedFile();

            menuItem_saveActionPerformed(evt);
            menuItem_save.setEnabled(true);
        }
    }//GEN-LAST:event_menuItem_saveAsActionPerformed

    private void button_addToWishlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addToWishlistActionPerformed
        //Will add all the data to a product and add it to the table
        
        String name = textField_name.getText();
        String contents = textArea_contents.getText();
        
        /*
        //Release Date==========================================================
        String d = textField_releaseDate.getText();
        String m = d.substring(0,3);
        int month = 0;
        if (m.equals("JAN") || m.equals("Jan") || m.equals("jan"))
            month = 1;
        if (m.equals("FEB") || m.equals("Feb") || m.equals("feb"))
            month = 2;
        if (m.equals("MAR") || m.equals("Mar") || m.equals("mar"))
            month = 3;
        if (m.equals("APR") || m.equals("Apr") || m.equals("apr"))
            month = 4;
        if (m.equals("MAY") || m.equals("May") || m.equals("may"))
            month = 5;
        if (m.equals("JUN") || m.equals("Jun") || m.equals("jun"))
            month = 6;
        if (m.equals("JUL") || m.equals("Jul") || m.equals("jul"))
            month = 7;
        if (m.equals("AUG") || m.equals("Aug") || m.equals("aug"))
            month = 8;
        if (m.equals("SEP") || m.equals("Sep") || m.equals("sep"))
            month = 9;
        if (m.equals("OCT") || m.equals("Oct") || m.equals("oct"))
            month = 10;
        if (m.equals("NOV") || m.equals("Nov") || m.equals("nov"))
            month = 11;
        if (m.equals("DEC") || m.equals("Dec") || m.equals("dec"))
            month = 12;
        int day = Integer.parseInt(d.substring(4,6));
        int year = Integer.parseInt(d.substring(8));
        String release = month + "/" + day + "/" + year;
        //======================================================================
        */
        String release = textField_releaseDate.getText();
        
        Double price = Double.parseDouble(textField_price.getText().substring(1));
        String number = textField_number.getText();
        
        String publisher = textField_publisher.getText();
        
        if (comboBox_priority.getSelectedIndex() == 0){
            JFrame jFrame = new JFrame();
            JOptionPane.showMessageDialog(jFrame, "Please select a priority!");
        }
        else{
            int priority = comboBox_priority.getSelectedIndex(); 
           
            Product p = new Product(name, contents, publisher, release, price, number, priority);
            products.put(number, p);
            
            buildTable();
            resetFields();
            resetSearchFields();
            
            if(menuItem_save.isEnabled()){
                menuItem_saveActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_button_addToWishlistActionPerformed

    private void button_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_saveActionPerformed
        if(menuItem_save.isEnabled()){
            menuItem_saveActionPerformed(evt);
        }
        else{
            menuItem_saveAsActionPerformed(evt);
        }
    }//GEN-LAST:event_button_saveActionPerformed

    private void button_searchLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_searchLinkActionPerformed

        if (textField_weblink.getText().isEmpty() && textField_searchNum.getText().isEmpty()){
            JFrame jFrame = new JFrame();
            JOptionPane.showMessageDialog(jFrame, "Please enter a LINK or SOLICITATION NUMBER!");
        }
        else if (!(textField_weblink.getText().isEmpty()) && !(textField_searchNum.getText().equals(""))){
            JFrame jFrame = new JFrame();
            JOptionPane.showMessageDialog(jFrame, "Please only enter in to ONE BOX!");
        }
        else{
            
            try {
                
                String url = "";
                if (!textField_weblink.getText().equals("")){
                    url = textField_weblink.getText();
                }
                else if (!textField_searchNum.getText().equals("")){
                    url = "https://www.previewsworld.com/Catalog/" + textField_searchNum.getText();
                }
                
                Document doc = Jsoup.connect(url).get();
                
                textField_name.setText(doc.select("h1.Title").text());
                textField_number.setText(doc.select("div.ItemCode").text());
                textField_releaseDate.setText(doc.select("div.ReleaseDate").text().substring(10));
                textField_publisher.setText(doc.select("div.Publisher").text());
                textField_price.setText(doc.select("div.SRP").text().substring(5));

                if(doc.select("div.Publisher").text().equals("MARVEL COMICS")){
                    String paragraph = doc.select("div.Text").text();
                    textArea_contents.setText(paragraph.substring(paragraph.indexOf("Collecting") + 11, paragraph.indexOf("In Shops:") - 1));
                }
                else {
                    textArea_contents.setText("No Contents (Graphic Novel / Manga)");
                }
                
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }   
    }//GEN-LAST:event_button_searchLinkActionPerformed

    private void button_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_deleteActionPerformed
        products.remove((String)table_wishlist.getValueAt(table_wishlist.getSelectedRow(), 1));
        buildTable();
    }//GEN-LAST:event_button_deleteActionPerformed

    private void button_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_viewActionPerformed
        
        Product p = products.get((String)table_wishlist.getValueAt(table_wishlist.getSelectedRow(), 1));
        
        tabbedPane.setSelectedIndex(0);
        
        textField_name.setText(p.getName());
        textField_number.setText(p.getSolicitNum());
        textField_releaseDate.setText(p.getRelease());
        textField_publisher.setText(p.getPublisher());
        textField_price.setText("$" + String.format("%.2f", p.getPrice()));
        textArea_contents.setText(p.getContents());
        
        comboBox_priority.setSelectedIndex(p.getPriority());
    }//GEN-LAST:event_button_viewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_addToWishlist;
    private javax.swing.JButton button_delete;
    private javax.swing.JButton button_save;
    private javax.swing.JButton button_searchLink;
    private javax.swing.JButton button_view;
    private javax.swing.JComboBox<String> comboBox_priority;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_contents;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_number;
    private javax.swing.JLabel label_ok;
    private javax.swing.JLabel label_price;
    private javax.swing.JLabel label_publisher;
    private javax.swing.JLabel label_releaseDate;
    private javax.swing.JLabel label_searchNum;
    private javax.swing.JLabel label_weblink;
    private javax.swing.JMenuItem menuItem_open;
    private javax.swing.JMenuItem menuItem_save;
    private javax.swing.JMenuItem menuItem_saveAs;
    private javax.swing.JMenu menu_file;
    private javax.swing.JPanel panel_info;
    private javax.swing.JPanel panel_productInformation;
    private javax.swing.JPanel panel_wishlist;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable table_wishlist;
    private javax.swing.JTextArea textArea_contents;
    private javax.swing.JTextField textField_name;
    private javax.swing.JTextField textField_number;
    private javax.swing.JTextField textField_price;
    private javax.swing.JTextField textField_publisher;
    private javax.swing.JTextField textField_releaseDate;
    private javax.swing.JTextField textField_searchNum;
    private javax.swing.JTextField textField_weblink;
    // End of variables declaration//GEN-END:variables

    private void buildTable() {
        DefaultTableModel model = (DefaultTableModel)table_wishlist.getModel();
        model.setRowCount(0);
        
        for (String key : products.keySet()){
            
            Product p = products.get(key);
            
            Object[] row = new Object[7];
            row[0] = p.getName();
            row[1] = p.getSolicitNum();
            row[2] = p.getPublisher();
            row[3] = p.getContents();
            row[4] = shortDate(p.getRelease());
            row[5] = p.getPrice();
            row[6] = p.getPriority();
            
            model.addRow(row);
        }
    }

    private void resetFields() {
        textField_name.setText("");
        textField_number.setText("");
        textField_releaseDate.setText("");
        textField_publisher.setText("");
        textField_price.setText("");
        textArea_contents.setText("");
        
        comboBox_priority.setSelectedIndex(0);
    }
    
    private void resetSearchFields() {
        textField_weblink.setText("");
        textField_searchNum.setText("");
    }
    
    private String shortDate(String d){
        
        String m = d.substring(0,3);
        int month = 0;
        if (m.equals("JAN") || m.equals("Jan") || m.equals("jan"))
            month = 1;
        if (m.equals("FEB") || m.equals("Feb") || m.equals("feb"))
            month = 2;
        if (m.equals("MAR") || m.equals("Mar") || m.equals("mar"))
            month = 3;
        if (m.equals("APR") || m.equals("Apr") || m.equals("apr"))
            month = 4;
        if (m.equals("MAY") || m.equals("May") || m.equals("may"))
            month = 5;
        if (m.equals("JUN") || m.equals("Jun") || m.equals("jun"))
            month = 6;
        if (m.equals("JUL") || m.equals("Jul") || m.equals("jul"))
            month = 7;
        if (m.equals("AUG") || m.equals("Aug") || m.equals("aug"))
            month = 8;
        if (m.equals("SEP") || m.equals("Sep") || m.equals("sep"))
            month = 9;
        if (m.equals("OCT") || m.equals("Oct") || m.equals("oct"))
            month = 10;
        if (m.equals("NOV") || m.equals("Nov") || m.equals("nov"))
            month = 11;
        if (m.equals("DEC") || m.equals("Dec") || m.equals("dec"))
            month = 12;
        int day = Integer.parseInt(d.substring(4,6));
        int year = Integer.parseInt(d.substring(8));
        String release = month + "/" + day + "/" + year;
        
        return release;
    }
}
